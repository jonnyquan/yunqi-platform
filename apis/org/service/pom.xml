<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.yunqi.apis.org</groupId>
	<artifactId>yunqi-org-service</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>yun qi org service</name>
	<url>http://bestaone.com</url>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.5.RELEASE</version>
		<relativePath/>
	</parent>

	<properties>
		<main.basedir>${basedir}/..</main.basedir>
		<java.version>1.8</java.version>
		<docker.image.name>yunqi/org</docker.image.name>
	</properties>
	
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
			<groupId>com.yunqi.commons</groupId>
			<artifactId>yunqi-commons-core</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>com.yunqi.apis.org</groupId>
			<artifactId>yunqi-org-api</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

	</dependencies>
	
	<!-- 插件配置 -->
	<build>
		<defaultGoal>deploy</defaultGoal>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<excludes>
							<exclude>**/.svn/**</exclude>
						</excludes>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<skip>${test.skip}</skip>
						<includes>
							<include>**com/yunqi/test/**/*Test.java</include>
						</includes>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.3</version>
					<configuration>
						<show>private</show>
						<minmemory>128m</minmemory>
						<maxmemory>512m</maxmemory>
						<aggregate>true</aggregate>
						<charset>UTF-8</charset>
						<encoding>UTF-8</encoding>
						<docencoding>UTF-8</docencoding>
						<failOnError>false</failOnError>
					</configuration>
				</plugin>

				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<locales>${project.build.locales}</locales>
						<outputEncoding>${project.build.sourceEncoding}</outputEncoding>
						<resources>
							<resource>
								<directory>src/main/resources/conf/${package.environment}</directory>
								<excludes>
									<exclude>src/main/resources/conf</exclude>
								</excludes>
								<filtering>true</filtering>
							</resource>
						</resources>
					</configuration>
				</plugin>
			
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>0.4.0</version>
				</plugin>	
			
			</plugins>
		</pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
    		<!-- tag::plugin[] -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<configuration>
					<imageName>${docker.image.name}</imageName>
					<dockerDirectory>src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
    		<!-- end::plugin[] -->
        </plugins>

	</build>

	<profiles>
		<profile>
			<id>pd</id>
			<properties>
				<package.environment>pd</package.environment>
				<test.skip>true</test.skip>
			</properties>
		</profile>
		<profile>
			<id>pp</id>
			<properties>
				<package.environment>pp</package.environment>
				<test.skip>true</test.skip>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<package.environment>dev</package.environment>
				<test.skip>true</test.skip>
			</properties>
		</profile>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<package.environment>.</package.environment>
				<test.skip>true</test.skip>
			</properties>
		</profile>
	</profiles>

</project>
